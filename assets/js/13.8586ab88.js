(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{191:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概览","aria-hidden":"true"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),s("p",[t._v("最近公司准备扩张海外业务，所以要给 Django 系统添加 "),s("strong",[t._v("国际化与本土化")]),t._v(" 支持。国际化一般简称 "),s("strong",[t._v("i18n")]),t._v("，代表 Internationalization 中 i 和 n 有 18 个字母；本地化简称 "),s("strong",[t._v("L10n")]),t._v("，表示 Localization 中 l 和 n 中有 10 个字母。有趣的一点是，一般会用小写的 i 和大写的 L 防止混淆。")]),t._v(" "),s("p",[t._v("简单来说：i18n 是为国际化搭建框架，L10n 是针对不同地区的适配。举个简单的例子：")]),t._v(" "),s("p",[t._v("i18n:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strftime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y/%m/%d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# before i18n")]),t._v("\ndatetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strftime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeformat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# after i18n")]),t._v("\n")])])]),s("p",[t._v("L10n:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("timeformat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cn'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y/%m/%d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'us'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m/%d/%Y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fr'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%d/%m/%Y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("更加具体的定义可以看 "),s("a",{attrs:{href:"https://www.w3.org/International/questions/qa-i18n",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C"),s("OutboundLink")],1),t._v(" 的解释。")]),t._v(" "),s("p",[t._v("i18n 的范围非常广，包括多语言、时区、货币单位、单复数、字符编码甚至是文字阅读顺序（"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Right-to-left",target:"_blank",rel:"noopener noreferrer"}},[t._v("RTL"),s("OutboundLink")],1),t._v("）等等。这篇文章只关注 "),s("strong",[t._v("i18n 的多语言")]),t._v(" 方面。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2019/05/06/5ccfe8a27e378.jpg",alt:"使用阿拉伯语的 windows 系统，来源"}})]),t._v(" "),s("blockquote",[s("p",[t._v("↑ 阿拉伯语的 windows 系统，文字甚至界面的方向都与中文版的相反（"),s("a",{attrs:{href:"http://blog.dmitriev.de/Articles/24-JUL-2014-ArabianWindow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("图片来源"),s("OutboundLink")],1),t._v("）")])]),t._v(" "),s("h2",{attrs:{id:"基本步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本步骤","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本步骤")]),t._v(" "),s("p",[t._v("Django 作为一个大而全的框架，已经提供了一套多语言的解决方案，我稍微对比了一下，并没能找到在 Django 体系下比官方方案还好用的库。Django 的方案可以简单分为四步：")]),t._v(" "),s("ol",[s("li",[t._v("一些必要的配置")]),t._v(" "),s("li",[t._v("在代码中标记需要翻译的文本")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("makemessages")]),t._v(" 命令生成 po 文件")]),t._v(" "),s("li",[t._v("编译 "),s("code",[t._v("compilemessages")]),t._v(" 命令编译 mo 文件")])]),t._v(" "),s("p",[t._v("下面我们详细来看看")]),t._v(" "),s("h3",{attrs:{id:"第一步：配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一步：配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一步：配置")]),t._v(" "),s("p",[t._v("首先在 settings.py 中加入这几个内容")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("LOCALE_PATHS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__file__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'language'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nMIDDLEWARE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'django.middleware.locale.LocaleMiddleware'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nLANGUAGES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'en'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'English'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zh'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'中文'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("LOCALE_PATHS")]),t._v("：指定下面第三步和第四步生成文件的位置。老版的 Django 需要手动新建好这个目录。")]),t._v(" "),s("p",[s("code",[t._v("LocaleMiddleware")]),t._v("：可以让 Django 识别并选择合适的语言。")]),t._v(" "),s("p",[s("code",[t._v("LANGUAGES")]),t._v("：指定了这个工程能提供哪些语言。")]),t._v(" "),s("h3",{attrs:{id:"第二步：标记文本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二步：标记文本","aria-hidden":"true"}},[t._v("#")]),t._v(" 第二步：标记文本")]),t._v(" "),s("p",[t._v("之前没有多语言的需要，所以大家在 AJAX 相应代码中直接写了中文，比如这样：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" JsonResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"内容过长"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("现在需要多语言了，就需要告诉 Django 哪些内容是需要翻译的。对于上面的例子来说，就是写成这样：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translation "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" gettext "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" _\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" JsonResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"msg"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"内容过长"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里使用 "),s("code",[t._v("gettext")]),t._v(" 函数将原本的字符串包裹起来，这样的话，Django 就可以根据当前语言返回合适的字符串。一般会使用单个下划线 "),s("code",[t._v("_")]),t._v(" 提高可读性。")]),t._v(" "),s("p",[t._v("因为我司几乎所有前后端通信都使用 AJAX，所以并没有怎么用上 Django 的模板功能（顺便一提，我司前端使用的多语言工具是 "),s("a",{attrs:{href:"https://github.com/i18next/i18next",target:"_blank",rel:"noopener noreferrer"}},[t._v("i18next"),s("OutboundLink")],1),t._v("）。不过在这里也一并写下 Django 模板的标记方法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<title>{% trans "This is the title." %}</title>\n<title>{% trans myvar %}</title>\n')])])]),s("p",[t._v("其中 "),s("code",[t._v("trans")]),t._v(" 标签告诉 Django 需要翻译这个括号里面的内容。更具体的用法可以参考"),s("a",{attrs:{href:"https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#trans-template-tag",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"第三步：makemessages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三步：makemessages","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三步："),s("code",[t._v("makemessages")])]),t._v(" "),s("p",[t._v("在执行这一步之前，请先通过 "),s("code",[t._v("xgettext --version")]),t._v(" 确认自己是否安装了 "),s("a",{attrs:{href:"https://www.gnu.org/software/gettext/gettext.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GNU gettext"),s("OutboundLink")],1),t._v("。GNU gettext 是一个标准 i18n L10n 库，Django 和很多其他语言和库的多语言模块都调用了 GNU gettext，所以接下来讲的一些 Django 特性实际上要归功于 GNU gettext。如果没有安装的话可以通过下面的方法安装：")]),t._v(" "),s("p",[t._v("ubuntu:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" update\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gettext\n")])])]),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/a/33896321",target:"_blank",rel:"noopener noreferrer"}},[t._v("macOS"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gettext\n$ brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" --force gettext\n")])])]),s("p",[s("a",{attrs:{href:"https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#gettext-on-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("windows"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("安装完 GNU gettext 后，对 Django 工程执行下面的命令")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python3 manage.py makemessages --local en\n")])])]),s("p",[t._v("之后可以找到生成的文件："),s("code",[t._v("language/en/LC_MESSAGES/django.po")]),t._v("。把上面命令中的 "),s("code",[t._v("en")]),t._v(" 替换成其他语言，就可以生成不同语言的 "),s("code",[t._v("django.po")]),t._v(" 文件。里面的内容大概是这样的：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#: path/file.py:397\nmsgid "订单已删除"\nmsgstr ""\n\n...\n')])])]),s("p",[t._v("Django 会找到被 "),s("code",[t._v("gettext")]),t._v(" 函数包裹的所有字符串，以 "),s("code",[t._v("msgid")]),t._v(" 的形式保存在 "),s("code",[t._v("django.po")]),t._v("。每个 "),s("code",[t._v("msgid")]),t._v(" 下面的 "),s("code",[t._v("msgstr")]),t._v(" 就代表你要把这个 "),s("code",[t._v("msgid")]),t._v(" 翻译成什么。通过修改这个文件可以告诉 Django 翻译的内容。同时通过注释说明了这个 "),s("code",[t._v("msgid")]),t._v(" 出现在哪个文件的哪一行。")]),t._v(" "),s("p",[t._v("关于这个文件，发现几点有趣的特性：")]),t._v(" "),s("ul",[s("li",[t._v("Django 会把多个文件中相同的 "),s("code",[t._v("msgid")]),t._v(" 归类在一起。「一次编辑，到处翻译」")]),t._v(" "),s("li",[t._v("如果以后源码中某个 "),s("code",[t._v("msgid")]),t._v(" 被删了，那么再次执行 "),s("code",[t._v("makemessages")]),t._v(" 命令后，这个 "),s("code",[t._v("msgid")]),t._v(" 和它的 "),s("code",[t._v("msgstr")]),t._v(" 会以注释的形式继续保存在 "),s("code",[t._v("django.po")]),t._v(" 中。")]),t._v(" "),s("li",[t._v("既然源码中的字符串只是一个所谓的 id，那么我就可以在源码中写没有实际含义的字符串，比如 "),s("code",[t._v('_("ERROR_MSG42")')]),t._v('，然后将 "ERROR_MSG42" 同时翻译成中文和英文。')]),t._v(" "),s("li",[t._v("这个文件中会保留模板字符串的占位符，比如可以使用命名占位符做到在不同语言中使用不同占位符顺序的功能，下面给出了一个例子：")])]),t._v(" "),s("p",[t._v("py file:")]),t._v(" "),s("pre",[s("code",[t._v("_('Today is {month} {day}.').format(month=m, day=d)\n_('Today is %(month)s %(day)s.') % {'month': m, 'day': d}\n")])]),t._v(" "),s("p",[t._v("po file:")]),t._v(" "),s("pre",[s("code",[t._v('msgid "Today is {month} {day}."\nmsgstr "Aujourd\'hui est {day} {month}."\n\nmsgid "Today is %(month)s %(day)s."\nmsgstr "Aujourd\'hui est %(day)s %(month)s."\n')])]),t._v(" "),s("h3",{attrs:{id:"第四步：compilemessages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四步：compilemessages","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四步："),s("code",[t._v("compilemessages")])]),t._v(" "),s("p",[t._v("修改好 "),s("code",[t._v("django.po")]),t._v(" 文件后，执行下面的命令：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ python3 manage.py compilemessages --local en\n")])])]),s("p",[t._v("Django 会调用程序，根据 "),s("code",[t._v("django.po")]),t._v(" 编译出一个名为 "),s("code",[t._v("django.mo")]),t._v(" 的二进制文件，位置和 "),s("code",[t._v("django.po")]),t._v(" 所在位置相同。这个文件才是程序执行的时候会去读取的文件。")]),t._v(" "),s("p",[t._v("执行完上面四步后，修改浏览器的语言设置，就可以看到 Django 的不同输出了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2019/05/06/5ccfe8a63ea5d.jpg",alt:"Chrome 的语言设置"}})]),t._v(" "),s("blockquote",[s("p",[t._v("↑ Chrome 的语言设置")])]),t._v(" "),s("h2",{attrs:{id:"高级特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 高级特性")]),t._v(" "),s("h3",{attrs:{id:"i18n-patterns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i18n-patterns","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("i18n_patterns")])]),t._v(" "),s("p",[t._v("有的时候，我们希望可以通过 URL 来选择不同的语言。这样做有很多好处，比如同一个 URL 返回的数据的语言一定是一致的。Django 的文档就使用了这种做法：")]),t._v(" "),s("blockquote",[s("p",[t._v("简体中文：https://docs.djangoproject.com/zh-hans/2.0/")]),t._v(" "),s("p",[t._v("英文：https://docs.djangoproject.com/en/2.0/")])]),t._v(" "),s("p",[t._v("具体的做法是在 URL 中添加 "),s("code",[t._v("<slug:slug>")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("urlpatterns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'category/<slug:slug>/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" news_views"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<slug:slug>/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" news_views"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("details"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("详细的做法可以参考 Django 的"),s("a",{attrs:{href:"https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#url-internationalization",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"django-如何决定使用哪种语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#django-如何决定使用哪种语言","aria-hidden":"true"}},[t._v("#")]),t._v(" Django 如何决定使用哪种语言")]),t._v(" "),s("p",[t._v("我们之前讲过 "),s("code",[t._v("LocaleMiddleware")]),t._v(" 可以决定使用何种语言。具体来说，"),s("code",[t._v("LocaleMiddleware")]),t._v(" 是按照下面的顺序（优先级递减）：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("i18n_patterns")])]),t._v(" "),s("li",[s("code",[t._v("request.session[settings.LANGUAGE_SESSION_KEY]")])]),t._v(" "),s("li",[s("code",[t._v("request.COOKIES[settings.LANGUAGE_COOKIE_NAME]")])]),t._v(" "),s("li",[s("code",[t._v("request.META['HTTP_ACCEPT_LANGUAGE']")]),t._v("，即 HTTP 请求中的 "),s("code",[t._v("Accept-Language")]),t._v(" header")]),t._v(" "),s("li",[s("code",[t._v("settings.LANGUAGE_CODE")])])]),t._v(" "),s("p",[t._v("我司选择把语言信息放到 Cookies 中，当用户手动选择语言时，可以让前端直接修改 Cookies，而不需要请求后台的某个接口。没有手动设置过语言的用户就没有这个 Cookies，跟随浏览器设置。话说 "),s("code",[t._v("settings.LANGUAGE_COOKIE_NAME")]),t._v(" 的默认值是 "),s("code",[t._v("django_language")]),t._v("，前端不想在他们的代码中出现 "),s("code",[t._v("django")]),t._v("，所以我在 "),s("code",[t._v("settings.py")]),t._v(" 中添加了 "),s("code",[t._v("LANGUAGE_COOKIE_NAME = app_language")]),t._v(" 😂。")]),t._v(" "),s("p",[t._v("你也可以通过 "),s("code",[t._v("request.LANGUAGE_CODE")]),t._v(" 在 View 中手动获知 "),s("code",[t._v("LocaleMiddleware")]),t._v(" 选用了哪种语言。你甚至可以通过 "),s("code",[t._v("activate")]),t._v(" 函数手动指定当前线程使用的语言：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translation "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" activate\n\nactivate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'en'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"ugettext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ugettext","aria-hidden":"true"}},[t._v("#")]),t._v(" ugettext")]),t._v(" "),s("p",[t._v("Python2 时代，为了区分 unicode strings 和 bytestrings，有 "),s("code",[t._v("ugettext")]),t._v(" 和 "),s("code",[t._v("gettext")]),t._v(" 两个函数。在 Python3 中，由于字符串编码的统一，"),s("code",[t._v("ugettext")]),t._v(" 和 "),s("code",[t._v("gettext")]),t._v(" 是等价的。官方说未来可能会废弃 "),s("code",[t._v("ugettext")]),t._v("，但是截止到现在（Django 2.0），"),s("code",[t._v("ugettext")]),t._v(" 还没废弃。")]),t._v(" "),s("h3",{attrs:{id:"gettext-lazy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gettext-lazy","aria-hidden":"true"}},[t._v("#")]),t._v(" gettext_lazy")]),t._v(" "),s("p",[t._v("这里先用一个例子直观地看一下 "),s("code",[t._v("gettext_lazy")]),t._v(" 和 "),s("code",[t._v("gettext")]),t._v(" 的区别")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translation "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" gettext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gettext_lazy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" activate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" get_language\n\ngettext_str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gettext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngettext_lazy_str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gettext_lazy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gettext_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'str'>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gettext_lazy_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <class 'django.utils.functional.lazy.<locals>.__proxy__'>")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"current language:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" get_language"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# current language: zh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gettext_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gettext_lazy_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你好世界！ 你好世界！")]),t._v("\n\nactivate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"en"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"current language:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" get_language"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# current language: en")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gettext_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gettext_lazy_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你好世界！ Hello World!")]),t._v("\n")])])]),s("p",[s("code",[t._v("gettext")]),t._v(" 函数返回的是一个字符串，但是 "),s("code",[t._v("gettext_lazy")]),t._v(" 返回的是一个代理对象。这个对象会在被使用的时候，才根据当前线程中语言决定翻译成什么文字。")]),t._v(" "),s("p",[t._v("这个功能在 Django 的 models 中尤其的有用。因为 models 中定义字符串的代码只会执行一次。在之后的请求中，根据语言的不同，这个所谓字符串要有不同的表现。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translation "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" gettext_lazy "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" _\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("help_text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is the help text'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourThing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    kind "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ForeignKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        ThingKind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        on_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CASCADE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        related_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kinds'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        verbose_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kind'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"使用-ast-fst-修改源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-ast-fst-修改源码","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 AST / FST 修改源码")]),t._v(" "),s("p",[t._v("由于我司工程非常庞大，人力给每个字符串添加 "),s("code",[t._v("_( ... )")]),t._v(" \b过于繁琐。所以我试图寻找一种自动化的方式。")]),t._v(" "),s("p",[t._v("一开始选择的是 Python 内置的 "),s("code",[t._v("ast")]),t._v(" (Abstract syntax tree 语法抽象树) 模块 。基本思路是通过 "),s("code",[t._v("ast")]),t._v(" 找到工程中的所有字符串，再给这些字符串添加 "),s("code",[t._v("_( ... )")]),t._v("。最后把修改后的语法树重新转为代码。")]),t._v(" "),s("p",[t._v("但是由于 "),s("code",[t._v("ast")]),t._v(" 对格式信息的支持不佳，修改代码后容易造成格式混乱。所以找到了名为 FST (Full Syntax Tree 全面抽象树) 的改进方式。我选择的 FST 库是 "),s("a",{attrs:{href:"https://github.com/PyCQA/redbaron",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("redbaron")]),s("OutboundLink")],1),t._v("。核心的代码如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RedBaron"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original_code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find_all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"StringNode"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        has_chinese_char"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" is_aleady_gettext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" is_docstring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_({})"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmodified_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dumps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("我把完整的代码放到了 "),s("a",{attrs:{href:"https://gist.github.com/ocavue/8c4a8ca228ece5f8291572318c45cfd1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gist"),s("OutboundLink")],1),t._v(" 上，因为是一个一次性脚本，写的比较随意，大家可以参考。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("redbaron")]),t._v(" 的过程中也发现了一些问题，一并记录这里：最大问题是 "),s("code",[t._v("redbaron")]),t._v(" "),s("a",{attrs:{href:"https://github.com/PyCQA/baron/pull/120",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("已经停止维护")]),s("OutboundLink")],1),t._v("了！所以不能支持一些新语法，比如 Python3.6 的 f-string。其次是这个库和 "),s("code",[t._v("ast")]),t._v(" 标准库相比，运行速度很慢，每次跑这个脚本我的电脑都发出了飞机引擎般的声音。第三点是会产生一些奇怪的格式：")]),t._v(" "),s("p",[t._v("修改前:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("OutStockSheet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未出库'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已出库'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已删除'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("修改后（"),s("code",[t._v("'已删除'")]),t._v(" 右边的括号跑到了下一行）:")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("OutStockSheet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未出库'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已出库'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'已删除'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("最后一点倒是可以通过格式化工具解决，问题不大。")]),t._v(" "),s("h3",{attrs:{id:"utf8-vs-utf-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#utf8-vs-utf-8","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("utf8")]),t._v(" vs "),s("code",[t._v("utf-8")])]),t._v(" "),s("p",[t._v("项目中有些 py 文件比较老，在文件开头使用了 "),s("code",[t._v("# coding: utf8")]),t._v(" 的标示。对于 Python 来说，utf8 是 utf-8 的别名，所以没有任何问题。Django 在调用 GNU gettext 时，会使用参数指定编码为 utf-8，但是 GNU 也会读取文件中的编码标示，而且它的优先级更高。不幸的是 utf8 对 GNU gettext 来说是一个未知编码，于是 GNU gettext 会降级使用 ASCII 编码，然后在遇到中文字符时报错（真笨！）：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('$ python3 manage.py makemessages --local en\n...\nxgettext: ./path/filename.py:1: Unknown encoding "utf8". Proceeding with ASCII instead.\nxgettext: Non-ASCII comment at or before ./path/filename.py:26.\n')])])]),s("p",[t._v("所以我需要把 "),s("code",[t._v("# coding: utf8")]),t._v(" 改成 "),s("code",[t._v("# coding: utf-8")]),t._v("，或者干脆删掉这行，反正 Python3 已经默认使用 utf-8 编码了。")]),t._v(" "),s("h3",{attrs:{id:"valueerror-plural-forms-expression-could-be-dangerous"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueerror-plural-forms-expression-could-be-dangerous","aria-hidden":"true"}},[t._v("#")]),t._v(" ValueError: plural forms expression could be dangerous")]),t._v(" "),s("p",[t._v("简单来说，plural forms 就是 GNU gettext 控制语言的单复数表现的一个配置，详细的解释可以参考 GNU gettext 的"),s("a",{attrs:{href:"https://www.gnu.org/savannah-checkouts/gnu/gettext/manual/html_node/Plural-forms.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("如果在操作 Django 工程的时候出现了 "),s("code",[t._v("ValueError: plural forms expression could be dangerous")]),t._v(" 的报错，那么就说明 django.po 文件中的 plural forms 配置的不对。我在配置中文的翻译文件的时候遇到了这个问题，并通过了下面的步骤解决了这个问题：")]),t._v(" "),s("ol",[s("li",[t._v("删除 django.mo 文件：只要这个文件没被删除，每次跑 manage.py 都会报错，包括 "),s("code",[t._v("makemessages")]),t._v(" 和 "),s("code",[t._v("compilemessages")]),t._v(" 命令在内的操作。")]),t._v(" "),s("li",[t._v("修改 django.po 文件：我根据"),s("a",{attrs:{href:"https://groups.google.com/forum/#!topic/django-users/KnVGzJAR2xw",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个链接"),s("OutboundLink")],1),t._v("，将 zh/LC_MESSAGES/django.po 文件中的 "),s("code",[t._v('"Plural-Forms: nplurals=2; plural=(n != 1);\\n"')]),t._v(" 改成了 "),s("code",[t._v('"Plural-Forms: nplurals=1; plural=0;\\n"')]),t._v("。其他的非英语语言很可能也需要对这行作出相应的修改。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("compilemessages")]),t._v(" 重新生成 djanpo.mo 文件。")])]),t._v(" "),s("p",[t._v("经过上面的步骤之后，以后执行 "),s("code",[t._v("makemessages")]),t._v(" 和 "),s("code",[t._v("compilemessages")]),t._v(" 命令时，上面第 2 步作出的修改"),s("strong",[t._v("不会")]),t._v("被替换，所以可以放心大胆地用。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Django (和其背后的 GNU gettext) 的多语言功能非常全面，堪称博大精深，比如处理单复数的 "),s("a",{attrs:{href:"https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#pluralization",target:"_blank",rel:"noopener noreferrer"}},[t._v("ngettext"),s("OutboundLink")],1),t._v("，处理多义词的 "),s("a",{attrs:{href:"https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#contextual-markers",target:"_blank",rel:"noopener noreferrer"}},[t._v("pgettext"),s("OutboundLink")],1),t._v("。HTTP 响应中使用翻译后的文本（"),s("code",[t._v("msgstr")]),t._v("），但是在日志中留下翻译前文本（"),s("code",[t._v("msgid")]),t._v("）的 "),s("a",{attrs:{href:"https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#gettext-noop",target:"_blank",rel:"noopener noreferrer"}},[t._v("gettext_noop"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("这篇文章主要讲了我在实践中用到的功能和遇到的坑，希望可以帮助大家了解 Django 多语言的基本用法。欢迎大家评论👏。")]),t._v(" "),s("blockquote",[s("p",[t._v("评论功能还未上线，大家可以去"),s("a",{attrs:{href:"https://juejin.im/post/5b3efc36e51d45197136eb09",target:"_blank",rel:"noopener noreferrer"}},[t._v("掘金"),s("OutboundLink")],1),t._v("评论本文。")])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.creativecommons.org/l/by-nc-nd/2.5/cn/88x31.png",alt:"知识共享协议"}})]),t._v(" "),s("p",[t._v("本文采用"),s("a",{attrs:{href:"http://creativecommons.org/licenses/by-nc-nd/2.5/cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("知识共享署名-非商业性使用-禁止演绎 2.5 中国大陆许可协议"),s("OutboundLink")],1),t._v("进行许可。")])])},[],!1,null,null,null);a.default=e.exports}}]);