(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{155:function(t,s,a){t.exports=a.p+"assets/img/monolithic-vs-microservices.4fc6eb32.png"},156:function(t,s,a){t.exports=a.p+"assets/img/monolith-microservices.8fdc4637.jpg"},157:function(t,s,a){t.exports=a.p+"assets/img/conf.3824acc1.png"},158:function(t,s,a){t.exports=a.p+"assets/img/kv.67636ba7.png"},159:function(t,s,a){t.exports=a.p+"assets/img/lb.1bab0617.png"},160:function(t,s,a){t.exports=a.p+"assets/img/service-discovery.092f44c1.png"},161:function(t,s,a){t.exports=a.p+"assets/img/localhost_8500_ui_mydc_kv_1.18dcf181.png"},162:function(t,s,a){t.exports=a.p+"assets/img/localhost_8500_ui_mydc_kv_2.9a189064.png"},163:function(t,s,a){t.exports=a.p+"assets/img/service-discovery-with-health-check.28fbe7cf.png"},189:function(t,s,a){"use strict";a.r(s);var r=a(1),n=Object(r.a)({},function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("Consul 是一个分布式的"),r("strong",[t._v("服务发现")]),t._v("和"),r("strong",[t._v("配置中心")]),t._v("系统。虽然我才刚刚开始学习，用的还不算非常深入，但是可以把目前学到的东西整理一下，希望可以给其他入门者一些帮助。")]),t._v(" "),r("h2",{attrs:{id:"微服务面临的挑战"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微服务面临的挑战","aria-hidden":"true"}},[t._v("#")]),t._v(" 微服务面临的挑战")]),t._v(" "),r("p",[t._v("微服务架构有很多优势，这个话题已经被讨论地太多了：部署灵活、逻辑清晰、扩展方便、高可用…… 我就不一一深入了。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(155),alt:""}})]),t._v(" "),r("blockquote",[r("p",[t._v("↑ 将一个庞大的服务拆成若干个微服务，每个微服务负责一个独立的模块。")])]),t._v(" "),r("p",[t._v("但是天下没有没有免费的午餐，使用微服务也有很多挑战，而 Consul 就解决了微服务场景中很多痛点。下面我会解释一下其中两个比较关键的痛点以及 Consul 的解决方案。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(156),alt:"monolith-microservices"}})]),t._v(" "),r("blockquote",[r("p",[t._v("↑  如果不懂得如何正确地使用，那么任何架构没有价值。图片来自 Twitter@alvaro_sanchex")])]),t._v(" "),r("h3",{attrs:{id:"配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),r("p",[t._v("以前我们在使用 Monolithic 服务的时候，整个服务使用的一个配置文件。但是在使用了微服务架构后，配置文件就会变得非常多。比如我需要修改一下数据库的地址，如果我有 20 个微服务，那么我就需要修改 20 个配置文件。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(157),alt:""}})]),t._v(" "),r("p",[t._v("为了解决这个问题 Consul 提供了一个分布式的键值对储存系统，称之为 "),r("strong",[t._v("K/V Store")]),t._v("。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(158),alt:""}})]),t._v(" "),r("p",[t._v("所有配置都储存在 Consul 中，我们可以在一个地方查看和修改所有服务的配置。Consul 的 K/V Store 是基于 Raft 算法实现的分布式系统，所以整个系统没有单点依赖，一个节点（比如一台服务器）出现故障并不会导致配置无法访问。")]),t._v(" "),r("h3",{attrs:{id:"服务发现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务发现","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务发现")]),t._v(" "),r("p",[t._v("一个微服务可能有多个实例，共同提供微服务。这些服务的数量和 IP 地址可能会频繁地变化，导致调用方试图去请求微服务方的时候，并不知道应该请求哪个微服务实例。")]),t._v(" "),r("p",[t._v("为了解决这个问题，一种常见的方案是在每一个微服务集群前放一个负载均衡（Load Balancing），其他服务需要调用这个服务的时候，先去调用 LB，由 LB 负责将请求分发到不同的微服务实例上。LB 的地址是固定不变的，所以调用方总是知道应该找谁。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(159),alt:""}})]),t._v(" "),r("blockquote",[r("p",[t._v("↑ 使用 LB 去分发流量")])]),t._v(" "),r("p",[t._v("但是使用 LB 分发流量带来了其他问题，比如说 LB 成为了一个单点。如果 LB 挂了，那么无论它的背后有多少个微服务实例，这些实例都无法正常工作。另外一个问题是这样的调用增加了调用的链条，使得微服务之间的调用延迟变得更高。")]),t._v(" "),r("p",[t._v("Consul 可以提供了一个分布式服务于注册集群，每一个节点在创建或者销毁微服务的时候，可以通知这个集群，并将最新的微服务信息注册到这个集群中。通过分布式算法，每一个节点都可以获取到所有节点上的服务信息。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(160),alt:""}})]),t._v(" "),r("blockquote",[r("p",[t._v("↑ 使用分布式注册与发现服务，让调用方可以直接知道微服务的日志，并直接去请求微服务的地址")])]),t._v(" "),r("h2",{attrs:{id:"使用-docker-学习-consul"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-学习-consul","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Docker 学习 Consul")]),t._v(" "),r("p",[t._v("我创建了一个 docker-compose 项目，使用多个 Docker 容器去模拟多台服务器，方便学习 Consul。")]),t._v(" "),r("p",[t._v("GitHub 地址：https://github.com/ocavue/consul-playground")]),t._v(" "),r("p",[t._v("使用前需要确保安装了 docker-compose 和 Docker。可以使用 "),r("code",[t._v("which docker-compose docker")]),t._v(" 来确认。如果你安装 Docker 的平台是 Mac 或者 Windows，那么 docker-compose 已经默认安装好了。")]),t._v(" "),r("p",[t._v("下面的步骤根据你的配置可能需要 "),r("code",[t._v("sudo")]),t._v("，我就不一一加上了。输入 "),r("code",[t._v("make build")]),t._v(" 来构建镜像，第一次构建的时候可能需要几分钟的时间。在这个 docker-compose 中，我创建了 4 个容器，名字分别为 "),r("code",[t._v("vm0")]),t._v(","),r("code",[t._v("vm1")]),t._v(","),r("code",[t._v("vm2")]),t._v(","),r("code",[t._v("vm3")]),t._v("。可以通过 "),r("code",[t._v("docker exec -it vm0 bash")]),t._v(" 进入各个容器内部。")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("root@vm1:/"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# which consul")]),t._v("\n/usr/local/bin/consul\nroot@vm1:/"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# consul --version")]),t._v("\nConsul v1.4.4\nProtocol 2 spoken by default, understands 2 to 3 "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("agent will automatically use protocol "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("2 when speaking to compatible agents"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nroot@vm1:/"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),r("p",[t._v("接下来所有的例子都可以直接在这个 docker-compose 中运行。")]),t._v(" "),r("h3",{attrs:{id:"安装-consul-以及注册节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装-consul-以及注册节点","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装 Consul 以及注册节点")]),t._v(" "),r("p",[t._v("Consul 使用 Go 便写，所以最后打包出来的是一个拥有所有依赖的二进制包 "),r("s",[t._v("以及 flag 包带来的奇怪的命令行参数格式")]),t._v("。可以直接将二进制包下载到本地并软链到 "),r("code",[t._v("PATH")]),t._v(" 中即可。这一步在创建 Docker 镜像的时候已经自动完成了。")]),t._v(" "),r("h3",{attrs:{id:"配置中心"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置中心","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置中心")]),t._v(" "),r("p",[t._v("我们可以使用"),r("a",{attrs:{href:"https://www.consul.io/docs/commands/kv.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行工具"),r("OutboundLink")],1),t._v("、"),r("a",{attrs:{href:"https://www.consul.io/api/kv.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP API"),r("OutboundLink")],1),t._v(" 以及图形界面（本质上也是基于 HTTP API）来编辑这些配置。`")]),t._v(" "),r("img",{staticStyle:{border:"1px solid #9d2159"},attrs:{src:a(161)}}),t._v(" "),r("img",{staticStyle:{border:"1px solid #9d2159"},attrs:{src:a(162)}}),t._v(" "),r("blockquote",[r("p",[t._v("↑ Consul 的 Web 图形界面，URL 是  http://127.0.0.1:8500/ui/")])]),t._v(" "),r("p",[t._v("Consul 的配置系统和 zookeeper 类似，使用的是类似文件目录的方式。Key "),r("code",[t._v("config/order/db/redis/prof")]),t._v(" 是一个目录，Value 是具体的数据。所以可以做到嵌套的配置，方便分类管理")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("/config\n\t\t/order\n\t\t\t\t/host: "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"...."')]),t._v("\n\t\t\t\t/db\n\t\t\t\t\t\t/redis\n\t\t\t\t\t\t\t\t/prof: "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"...."')]),t._v("\n\t\t\t\t\t\t/mongodb: "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"...."')]),t._v("\n\t\t\t\t/mq\n\t\t\t\t\t\t/rabbitmq: "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"...."')]),t._v("\t\t\n")])])]),r("p",[t._v("需要特别注意的是 Consul 限制了 value 的大小，最大是 512Kb。")]),t._v(" "),r("h3",{attrs:{id:"服务注册与发现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务注册与发现","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务注册与发现")]),t._v(" "),r("p",[t._v("我们假设现在有一个叫做 order 的微服务。我们想要要在 vm0 上注册这个服务。")]),t._v(" "),r("p",[t._v("在容器 "),r("code",[t._v("vm0")]),t._v(" 中创建 "),r("code",[t._v("/etc/consul.d/order-1.json")]),t._v(" 并写入下面的内容")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"service"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7100")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[r("code",[t._v("/etc/consul.d")]),t._v(" 是存放 Consul 配置文件的目录。创建好配置后在 vm0 上执行 "),r("code",[t._v("consul reload")]),t._v("，这个服务就注册完了。")]),t._v(" "),r("p",[t._v("我们可以在其他的机器上（比如 vm1）通过 Consul 的 API 参看刚刚注册的服务：")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[t._v("root@vm"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("/# curl -s http"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//localhost:8500/v1/catalog/service/order | python3 -m json.tool")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ID"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ac54685b-3489-ca6a-59d6-fe50b9b292b4"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Node"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vm0"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Address"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.18.0.4"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Datacenter"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mydc"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"TaggedAddresses"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lan"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.18.0.4"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"wan"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.18.0.4"')]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"NodeMeta"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"consul-network-segment"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceKind"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceID"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceName"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceTags"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceAddress"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceWeights"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Passing"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Warning"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceMeta"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServicePort"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceEnableTagOverride"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceProxyDestination"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceProxy"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceConnect"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CreateIndex"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("602")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ModifyIndex"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("602")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),r("p",[t._v("可以看到在其他服务器上的已经可以找到这个 order 服务了。我们在配置文件中写的三个字段分别展示在 "),r("code",[t._v("ServiceID")]),t._v(", "),r("code",[t._v("ServiceName")]),t._v(", "),r("code",[t._v("ServicePort")]),t._v(" 中。")]),t._v(" "),r("p",[t._v("在注册服务时候，我们在 json 文件中填写的 id 必须保证"),r("strong",[t._v("单台服务器上内唯一")]),t._v("。")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[t._v("root@vm"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("/# curl -s http"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//localhost:8500/v1/catalog/service/order | python3 -m json.tool")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Node"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vm0"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceID"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceName"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServicePort"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ......\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Node"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vm0"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceID"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-2"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceName"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServicePort"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7200")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ......\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Node"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vm1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceID"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceName"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServicePort"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ......\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Node"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vm2"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceID"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServiceName"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ServicePort"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7100")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ......\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nroot@vm"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("/#\n")])])]),r("blockquote",[r("p",[t._v("↑  多个节点中可以注册 ServiceID 相同的服务")])]),t._v(" "),r("p",[t._v('这里需要特别提一点，服务的注册只是"注册"而已，相当于把这个 json 配置文件的内容放到了一个分布式储存系统中。Consul 本身并不会帮你在 7100 端口上启动你的 order 服务，这件事情需要你自己去做。')]),t._v(" "),r("p",[t._v("看到这里，我们已经简单地走完了一套服务注册与发现的流程。下面说一些其他比较常用的操作。")]),t._v(" "),r("h4",{attrs:{id:"通过-api-注册服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过-api-注册服务","aria-hidden":"true"}},[t._v("#")]),t._v(" 通过 API 注册服务")]),t._v(" "),r("p",[t._v("除了文件，consul 也支持通过 RESTful HTTP API 创建服务：")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("root@vm1:~"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat payload.json")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-3"')]),t._v(",\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),t._v(",\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"port"')]),t._v(":7300\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nroot@vm1:~"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl --request PUT --data @payload.json http://127.0.0.1:8500/v1/agent/service/register")]),t._v("\nroot@vm1:~"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),r("p",[t._v("通过 API 创建不需要执行 "),r("code",[t._v("consul reload")]),t._v("。")]),t._v(" "),r("p",[t._v("值得注意 Consul 中配置项的写法。在"),r("strong",[t._v("配置文件")]),t._v("中，只能使用 "),r("code",[t._v("snake_case")]),t._v("，在 HTTP API 的"),r("strong",[t._v("请求")]),t._v("中，"),r("code",[t._v("snake_case")]),t._v(" 和 "),r("code",[t._v("CamelCased")]),t._v(" 都可以使用，在 API 的"),r("strong",[t._v("响应")]),t._v("中，Consul 返回的结果是 "),r("code",[t._v("CamelCased")]),t._v("。在这篇文章中我在服务定义中使用的都是 "),r("code",[t._v("snake_case")]),t._v("，因为这是在配置文件和 API 请求中都可以的写法。"),r("a",{attrs:{href:"https://github.com/hashicorp/consul/blame/5508fd164cae4d1fad303805f96feca327f4d0be/website/source/docs/agent/services.html.md#L279-L288",target:"_blank",rel:"noopener noreferrer"}},[t._v("（相关文档）"),r("OutboundLink")],1)]),t._v(" "),r("h4",{attrs:{id:"自定义信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自定义信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 自定义信息")]),t._v(" "),r("p",[t._v("在注册服务的时候，我们可能希望像这个服务写入一些自定义的信息，consul 提供了两种不同的配置项方式去完成这项任务："),r("code",[t._v("tags")]),t._v(" 和 "),r("code",[t._v("meta")]),t._v("。")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-4"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7400")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"primary"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hotfix"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v2"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meta"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"branch"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix_order_count"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      \t"),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"e981106d2d84e"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"creator"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alex"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("简单来说，tags 是一个列表，meta 是一个字典。consul 并不关心这两个配置的数据具体是什么，这些数据都是由调用方去关心的。")]),t._v(" "),r("p",[t._v("出于性能和加密的考虑，"),r("code",[t._v("meta")]),t._v(" 有一些限制，最多只能由 64 个键值对，key 只能使用特定的字符 （"),r("code",[t._v("A-Z")]),t._v(" "),r("code",[t._v("a-z")]),t._v(" "),r("code",[t._v("0-9")]),t._v(" "),r("code",[t._v("_")]),t._v(" 和 "),r("code",[t._v("-")]),t._v("），key 和 value 的最大长度分别是 128 和 512。")]),t._v(" "),r("h4",{attrs:{id:"健康度检查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#健康度检查","aria-hidden":"true"}},[t._v("#")]),t._v(" 健康度检查")]),t._v(" "),r("p",[t._v("在部署 Consul 的时候，每台运行服务的机器都需要运行一个 agent 服务，原因之一是 Consul 提供了健康度检查的功能，这也是一个单纯的分布式存储系统所没有的。")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-4"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7400")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"checks"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/check_mem.py"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--limit"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"256M"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"interval"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10s"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("在上面这个服务的定义中，我们增加了一个 "),r("code",[t._v("checks")]),t._v(" 配置，这个配置让 Consul 每十秒钟运行一下 "),r("code",[t._v("check_redis.py")]),t._v(" 脚本，然后获取这个脚本的 stdout 和 exit code。之后就可以在整个集群上的任意节点上获取这个服务的信息")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('root@vm2:~# curl -s http://127.0.0.1:8500/v1/health/checks/order | python3 -m json.tool\n[\n    {\n        "Node": "vm3",\n        "CheckID": "service:order-4",\n        "Name": "Service \'order\' check",\n        "Status": "warning",\n        "Notes": "",\n        "Output": "Something wrong\\n",\n        "ServiceID": "order-8",\n        "ServiceName": "order",\n        "ServiceTags": [],\n        "Definition": {},\n        "CreateIndex": 1887,\n        "ModifyIndex": 1889\n    }\n]\n')])])]),r("p",[t._v("在上面这个这个例子中，"),r("code",[t._v('"Something wrong\\n"')]),t._v(" 是 "),r("code",[t._v("/bin/check_mem.py")]),t._v(" 脚本的 stdout，"),r("code",[t._v('"Status": "warning"')]),t._v(" 表示脚本的 exit code 为 1。exit code 和 status 具体的关系如下：")]),t._v(" "),r("blockquote",[r("p",[t._v("Exit code 0 - Check is passing")]),t._v(" "),r("p",[t._v("Exit code 1 - Check is warning")]),t._v(" "),r("p",[t._v("Any other code - Check is failing")])]),t._v(" "),r("p",[t._v("除了上面展示的通过脚本来监测外，Consul 还内置了一些"),r("a",{attrs:{href:"https://www.consul.io/docs/agent/checks.html#check-definition",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用的检测方法"),r("OutboundLink")],1),t._v("，包括 HTTP、TCP、TTL、Docker 和 gRPC")]),t._v(" "),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order-5"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("7500")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"checks"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"http"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://localhost:7500/health"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"method"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"interval"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10s"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timeout"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1s"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("blockquote",[r("p",[t._v("↑ 一个使用 HTTP 接口进行健康度检查的服务定义")])]),t._v(" "),r("p",[t._v("通过 Consul 的健康度检查功能以及配合自己写的脚本，我们就可以根据健康度来动态地分配不同服务的流量")]),t._v(" "),r("p",[r("img",{attrs:{src:a(163),alt:"Service discovery with health check"}})]),t._v(" "),r("blockquote",[r("p",[t._v("↑ A 服务了解每个 B 服务实例的健康度，从而可以避免将流量分配到特定 B 服务实例中")])]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("这篇文章简单地介绍了一下 Consul 的两个核心特性：配置中心和服务发现。讲的不深，但是应该可以让大家对 Consul 有个清晰直观的认识。")]),t._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=mxeMdl0KvBI",target:"_blank",rel:"noopener noreferrer"}},[t._v("Introduction to HashiCorp Consul"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://learn.hashicorp.com/consul/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Learn Consul"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.consul.io/docs/guides/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Guides"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.consul.io/docs/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Documents"),r("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=n.exports}}]);